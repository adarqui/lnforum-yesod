{-# LANGUAGE TemplateHaskell #-}

-- https://hackage.haskell.org/package/yesod-static-1.5.0.3/docs/Yesod-EmbeddedStatic.html
-- Explains what functions get generated by staticFiles TH

module LN.Settings.StaticFiles (
  staticFiles,
  css_style_css,
  css_bbcode_css,
  fonts_glyphicons_halflings_regular_eot,
  fonts_glyphicons_halflings_regular_svg,
  fonts_glyphicons_halflings_regular_ttf,
  fonts_glyphicons_halflings_regular_woff,
  fonts_glyphicons_halflings_regular_woff2,
  img_loading_1_gif,
  img_loading_2_gif,
  img_loading_3_gif,
  img_loading_4_gif,
  img_404_png,
  img_oops_png,
  assets_bootstrap_css,
  assets_bootstrap_css_map,
  assets_favicon_ico,
  assets_react_js,
  assets_react_dom_js,
  assets_jquery_js,
  assets_bootstrap_js,
  assets_style_css,
  emoticons_cycling_gif,
  emoticons_frown_gif,
  emoticons_jumping_gif,
  emoticons_running_gif,
  emoticons_sprinting_gif,
  emoticons_squatting_gif,
  emoticons_wink_gif,
  emoticons_smile_gif,
  emoticons_lipsrsealed_gif,
  emoticons_undecided_gif,
  emoticons_lololol_gif,
  emoticons_evil_gif,
  emoticons_grin_gif,
  emoticons_huh_gif,
  emoticons_rant_gif,
  emoticons_derp_gif,
  emoticons_trolldance_gif,
  emoticons_cheesy_gif,
  emoticons_cool_gif,
  emoticons_personal_record_gif,
  emoticons_sad_gif,
  emoticons_pokerface_gif,
  emoticons_pissed_gif,
  emoticons_embarrassed_gif,
  emoticons_kiss_gif,
  emoticons_trollface_gif,
  emoticons_ibsquatting_gif,
  emoticons_tongue_gif,
  emoticons_facepalm_gif,
  emoticons_angry_gif,
  emoticons_headbang_gif,
  emoticons_raging_gif,
  emoticons_shocked_gif,
  emoticons_rolleyes_gif,
  emoticons_goodjobbro_gif,
  emoticons_cry_gif,
  emoticons_ninja_gif,
  emoticons_uhcomeon_gif,
  emoticons_ibjumping_gif,
  emoticons_gtfo_gif,
  emoticons_azn_gif,
  emoticons_ffffffuuuuuu_gif,
  emoticons_ibcycling_gif,
  emoticons_wowthatwasnutswtf_gif,
  emoticons_highfive_gif,
  emoticons_welcome_gif,
  emoticons_almostascoolasnyancat_gif,
  emoticons_motherofgod_gif,
  emoticons_ibrunning_gif,
  emoticons_strong_gif,
  {-
  dist_all_js,
  dist_all_min_js,
  dist_all_min_js_gz,
  dist_index_html,
  dist_lib_js,
  dist_manifest_webapp,
  dist_out_js,
  dist_out_stats,
  dist_rts_js,
  dist_runmain_js
  -}
) where



-- import           LN.Settings  (appStaticDir, compileTimeAppSettings)
import           Yesod.Static (staticFiles)



-- This generates easy references to files in the static directory at compile time,
-- giving you compile-time verification that referenced files exist.
-- Warning: any files added to your static directory during run-time can't be
-- accessed this way. You'll have to use their FilePath or URL to access them.
--
-- For example, to refer to @static/js/script.js@ via an identifier, you'd use:
--
--     js_script_js
--
-- If the identifier is not available, you may use:
--
--     StaticFile ["js", "script.js"] []
-- staticFiles (appStaticDir compileTimeAppSettings)
staticFiles "static"
